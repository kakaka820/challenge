<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>アンケート</title>
  <script type="module">
    // Firebase SDKの読み込み
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
    import { getFirestore, collection, addDoc, serverTimestamp } 
      from "https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js";

    // Firebase 設定
    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
      projectId: "YOUR_PROJECT_ID",
      storageBucket: "YOUR_PROJECT_ID.appspot.com",
      messagingSenderId: "YOUR_SENDER_ID",
      appId: "YOUR_APP_ID"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    // フォーム送信処理
    async function handleSubmit(e) {
      e.preventDefault();

      const set1 = [
        document.querySelector("#set1-1").value,
        document.querySelector("#set1-2").value,
        document.querySelector("#set1-3").value
      ];
      const set2 = [
        document.querySelector("#set2-1").value,
        document.querySelector("#set2-2").value,
        document.querySelector("#set2-3").value
      ];

      // 重複チェック
      function hasDuplicate(arr) {
        return new Set(arr).size !== arr.length;
      }
      if (hasDuplicate(set1) || hasDuplicate(set2)) {
        alert("同じ数字を2回選ぶことはできません。");
        return;
      }

      // Firestoreに保存
      try {
        await addDoc(collection(db, "answers"), {
          set1: set1.map(Number),
          set2: set2.map(Number),
          createdAt: serverTimestamp()
        });
        alert("回答を送信しました。ありがとうございました！");
        document.getElementById("form").reset();
      } catch (err) {
        console.error(err);
        alert("エラーが発生しました。もう一度試してください。");
      }
    }

    window.addEventListener("DOMContentLoaded", () => {
      document.getElementById("form").addEventListener("submit", handleSubmit);
    });
  </script>
</head>
<body>
  <h2>アンケート</h2>
  <form id="form">
    <fieldset>
      <legend>1回目の選択（3つ）</legend>
      <select id="set1-1" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
      <select id="set1-2" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
      <select id="set1-3" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
    </fieldset>

    <fieldset>
      <legend>2回目の選択（3つ）</legend>
      <select id="set2-1" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
      <select id="set2-2" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
      <select id="set2-3" required>
        <option value="">選択してください</option>
        ${Array.from({length: 14}, (_, i) => `<option value="${i+1}">${i+1}</option>`).join("")}
      </select>
    </fieldset>

    <button type="submit">送信</button>
  </form>
</body>
</html>
